prototype(Neos.Neos:Page) {
    head.cookieConsent = Neos.Fusion:Template {
        templatePath = 'resource://KaufmannDigital.CookieConsent/Private/Templates/FusionObjects/Initialize.html'

        includeJavaScript = ${Configuration.setting('KaufmannDigital.CookieConsent.includeJavaScript')}
        includeCss = ${Configuration.setting('KaufmannDigital.CookieConsent.includeCss')}


        settings = Neos.Fusion:RawArray {
            type = ${Configuration.setting('KaufmannDigital.CookieConsent.type')}
            position = ${Configuration.setting('KaufmannDigital.CookieConsent.position')}
            static = ${Configuration.setting('KaufmannDigital.CookieConsent.static')}
            theme = ${Configuration.setting('KaufmannDigital.CookieConsent.theme')}
            layout = ${Configuration.setting('KaufmannDigital.CookieConsent.layout')}
            palette = ${Configuration.setting('KaufmannDigital.CookieConsent.palette')}
            elements = ${Configuration.setting('KaufmannDigital.CookieConsent.elements')}
            compliance = ${Configuration.setting('KaufmannDigital.CookieConsent.compliance')}
            cookie = ${Configuration.setting('KaufmannDigital.CookieConsent.cookie')}
            content = Neos.Fusion:RawArray {
                message = ${Translation.translate('message', null, [], Configuration.setting('KaufmannDigital.CookieConsent.translations.source'), Configuration.setting('KaufmannDigital.CookieConsent.translations.package'))}
                dismiss = ${Translation.translate('dismiss', null, [], Configuration.setting('KaufmannDigital.CookieConsent.translations.source'), Configuration.setting('KaufmannDigital.CookieConsent.translations.package'))}
                allow = ${Translation.translate('allow', null, [], Configuration.setting('KaufmannDigital.CookieConsent.translations.source'), Configuration.setting('KaufmannDigital.CookieConsent.translations.package'))}
                deny = ${Translation.translate('deny', null, [], Configuration.setting('KaufmannDigital.CookieConsent.translations.source'), Configuration.setting('KaufmannDigital.CookieConsent.translations.package'))}
                link = ${Translation.translate('link-text', null, [], Configuration.setting('KaufmannDigital.CookieConsent.translations.source'), Configuration.setting('KaufmannDigital.CookieConsent.translations.package'))}

                href = Neos.Neos:NodeUri {
                    node = Neos.Fusion:Case {
                        policyPageProperty {
                            condition = ${q(site).property('policyPage')}
                            renderer = ${q(site).property('policyPage')}
                        }

                        policyPageNodes {
                            condition = ${String.isBlank(Configuration.setting('KaufmannDigital.CookieConsent.policyPageNodes.' + site.name)) == false}
                            renderer = ${q(site).find('#' + Configuration.setting('KaufmannDigital.CookieConsent.policyPageNodes.' + site.name)).get(0)}
                        }

                        globalConfiguration {
                            condition = true
                            renderer = ${q(site).find('#' + Configuration.setting('KaufmannDigital.CookieConsent.policyPageNode')).get(0)}
                        }
                    }


                    absolute = true
                }
            }

            @process.json = ${Json.stringify(value)}
        }

        @if.enabled = ${Configuration.setting('KaufmannDigital.CookieConsent.enable') == true}
        @if.notInBackend = ${site.context.inBackend == false}
    }
}
